openapi: '3.0.3'
info:
  title: SQL Proxy
  version: '1.0'
servers:
  - url: http://localhost/api/v1

paths:

  /connection:

    post:
      summary: Получить SQL-соединение
      description: Сначала проверяет, установлено ли уже SQL-соединение. Если нет, устанавливает новое и добавляет его в пул доступных соединений.
      requestBody:
        description: Укажите свойства и учетные данные SQL-соединения.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectionProperties'

      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                type: string
                description: Возвращает идентификатор SQL-соединения в форме GUID.
                example: '52f0b434-4eae-4cc6-803c-2d2f604fe16c'

        '400':
          description: Ошибка декодирования JSON

        '500':
          description: Не удалось получить SQL-соединение
          
    delete:
      summary: Закрыть SQL-соединение
      description: Закрывает и явно удаляет SQL-соединение из пула доступных соединений.
      parameters:
        - in: header
          name: Connection-Id
          schema:
            type: string
          description: Идентификатор SQL-соединения в форме GUID.
          required: true
          example: '52f0b434-4eae-4cc6-803c-2d2f604fe16c'

      responses:
        '200':
          description: OK
        '400':
          description: Неверный запрос

  /query:

    get:
      summary: Запросы SELECT
      description: Используйте этот метод для любого SQL-запроса, от который ожидается результат в виде таблицы, например, с оператором SELECT. Полученная таблица оборачивается в JSON-объект, с колонками, определяемыми динамически на основе запроса.
      parameters:
        - in: header
          name: Connection-Id
          schema:
            type: string
          description: Идентификатор SQL-соединения в форме GUID, должен быть получен ранее методом POST /connection.
          required: true
          example: '52f0b434-4eae-4cc6-803c-2d2f604fe16c'
        - in: header
          name: SQL-Statement
          schema:
            type: string
          description: SQL-запрос (URL-кодированный).
          required: true
          example: 'SELECT * FROM SALES WHERE Title LIKE "Manager %"'

      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseEnvelope'
                description: Результат SQL-запроса в JSON-конверте.
        '400':
          description: Неверный запрос
        '403':
          description: Запрещено
        '500':
          description: Внутренняя ошибка сервера

    post:
      summary: Прочие запросы
      description: Используйте этот метод для любого SQL-запроса, который не возвращает результат в виде таблицы, например с операторами INSERT, DELETE или другими подобными.
      parameters:
        - in: header
          name: Connection-Id
          schema:
            type: string
          description: Идентификатор SQL-соединения в форме GUID, должен быть получен ранее методом POST /connection.
          required: true
          example: '52f0b434-4eae-4cc6-803c-2d2f604fe16c'
        - in: header
          name: SQL-Statement
          schema:
            type: string
          description: SQL-запрос (URL-кодированный).
          required: true
          example: 'DELETE FROM SALES WHERE id = 783'
      responses:
        '200':
          description: OK
        '400':
          description: Неверный запрос
        '403':
          description: Запрещено
  
  /prepared:
  
    post:
      summary: Создать предварительно подготовленный оператор
      description: Используйте этот метод для создания предварительно подготовленного оператора
      parameters:
        - in: header
          name: Connection-Id
          schema:
            type: string
          description: Идентификатор SQL-соединения в форме GUID, должен быть получен ранее методом POST /connection.
          required: true
          example: '52f0b434-4eae-4cc6-803c-2d2f604fe16c'
        - in: header
          name: Prepared-Statement
          description: Предварительно подготовленный оператор SQL с параметрами, для выборки или изменения данных (url-кодированный).
          schema:
            type: string
          required: true
          example: 'SELECT * SALES WHERE id = ? and name = ?'
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                type: string
                description: Возвращает идентификатор подготовленного оператора SQL в форме GUID..
                example: 'f3f0b434-e4ae-c4c6-c803-d22f504fe16c'
        '400':
          description: Неверный запрос
        '403':
          description: Запрещено
        '500':
          description: Внутренняя ошибка сервера
    
    delete:
      summary: Закрыть предварительно подготовленный оператор
      description: Закрыть и удалить предварительно подготовленный оператор SQL.
      parameters:
        - in: header
          name: Connection-Id
          schema:
            type: string
          description: Идентификатор SQL-соединения в форме GUID, должен быть получен ранее методом POST /connection.
          required: true
          example: '52f0b434-4eae-4cc6-803c-2d2f604fe16c'
        - in: header
          name: Statement-Id
          schema:
            type: string
          description: Идентификатор предварительно подготовленного оператора SQL в форме GUID, должен быть получен ранее методом POST /prepared.
          required: true
          example: 'f3f0b434-e4ae-c4c6-c803-d22f504fe16c'

      responses:
        '200':
          description: OK
        '400':
          description: Неверный запрос
        '403':
          description: Запрещено

components:
  schemas:
    ConnectionProperties:
      type: object
      properties:
        db_type:
          type: string
          description: 'Одно из следующих значений: postgres, sqlserver, mysql'
          example: 'postgres'
        host:
          type: string
          description: 'Имя или IP-адрес SQL-сервера (ipv4, ipv6)'
          example: 'localhost.local'
        port: 
          type: integer
          description: 'IP-порт SQL-сервера'
          minimum: 1000
          maximum: 65535
          example: 5442
        user:
          type: string
          description: 'Учетные данные: имя пользователя'
          example: 'MyServiceAccount'
        password:
          type: string
          description: 'Учетные данные: пароль'
          example: 'MyServicePassword'
        db_name:
          type: string
          description: 'Имя базы данных'
          example: 'Sales'
        ssl:
          type: boolean
          description: 'Специфичный параметр Postgres для включения SSL'
          default: false

    ResponseEnvelope:
      type: object
      properties:
        api_version:
          type: integer
          default: 1
          description: Версия API
          example: 1
        connection_id:
          type: string
          description: Идентификатор SQL-соединения в форме GUID
          example: '52f0b434-4eae-4cc6-803c-2d2f604fe16c'
        info:
          type: string
          description: Дополнительная информация (опционально)
          example: nice query
        rows_count:
          type: integer
          description: Количество возвращенных строк
          example: 32
        exceeds_max_rows:
          type: boolean
          description: Указывает, был ли превышен параметр MAX_ROWS
          example: false
          default: false
        rows:
          type: object
          description: JSON-таблица, преобразованная из результата запроса (по сути массив объектов).
